!function(e){var o={};function r(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=e,r.c=o,r.d=function(e,o,n){r.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,o){if(1&o&&(e=r(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var t in e)r.d(n,t,function(o){return e[o]}.bind(null,t));return n},r.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(o,"a",o),o},r.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},r.p="",r(r.s=3)}([function(e,o){e.exports=function(){for(var e=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],o=0;o<256;o++)e[256+o]=e[o];function r(e){return e*e*e*(e*(6*e-15)+10)}function n(e,o,r){return o+e*(r-o)}function t(e,o,r,n){var t=15&e,i=t<8?o:r,l=t<4?r:12==t||14==t?o:n;return(0==(1&t)?i:-i)+(0==(2&t)?l:-l)}return{noise:function(o,i,l){var a=~~o,s=~~i,u=~~l,d=255&a,c=255&s,f=255&u,m=(o-=a)-1,v=(i-=s)-1,p=(l-=u)-1,g=r(o),y=r(i),x=r(l),C=e[d]+c,R=e[C]+f,E=e[C+1]+f,h=e[d+1]+c,M=e[h]+f,P=e[h+1]+f;return n(x,n(y,n(g,t(e[R],o,i,l),t(e[M],m,i,l)),n(g,t(e[E],o,v,l),t(e[P],m,v,l))),n(y,n(g,t(e[R+1],o,i,p),t(e[M+1],m,i,l-1)),n(g,t(e[E+1],o,v,p),t(e[P+1],m,v,p))))}}}},function(e,o){e.exports="\nuniform vec3 sunNormal;\n\nvarying vec3 interpColor;\nvarying vec3 interpPosition;\nvarying float sunFactor;\n\nvoid main() {\n    interpColor = color;\n    interpPosition = position;\n\n    sunFactor = 0.5 + max(dot(normal, sunNormal), 0.0);\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n"},function(e,o){e.exports="\nvarying vec3 interpColor;\nvarying vec3 interpPosition;\nvarying float sunFactor;\n\nvoid main() {\n\n    vec3 inherentColor = interpColor;\n\n    gl_FragColor = vec4(inherentColor * sunFactor, 1.0);\n}\n"},function(e,o,r){"use strict";r.r(o);var n=r(0),t=r.n(n);AFRAME.registerGeometry("atoll-terrain",{schema:{middleRadius:{type:"number",default:100,min:10},unitSize:{type:"number",default:1,min:.1,max:1e3},far:{type:"number",default:4e3},landYinColor:{type:"color",default:"#528d04"},landYangColor:{type:"color",default:"#278d53"},seaYinColor:{type:"color"},seaYangColor:{type:"color"},log:{type:"boolean",default:!1}},init:function(e){const o=new t.a,r=100*Math.random(),n=Math.sqrt(3)/2,i=Math.round(e.middleRadius/e.unitSize),l=e.middleRadius/i,a=(i-1)*l+1e-4,s=(i+1)*l+1e-4,u=e.far>s?e.far:s,d=a/4,c=Math.ceil(1.16*i),f=new THREE.Color(e.landYinColor),m=new THREE.Color(e.landYangColor),v=new THREE.Color(e.seaYinColor),p=new THREE.Color(e.seaYangColor);let g=v.clone();g.lerp(p,.5),e.log&&console.log("atoll-terrain","SIZE="+i,"SCAN_SIZE="+c,"UNIT_SIZE="+l,"middleRadius="+e.middleRadius,"FAR="+u);let y=new THREE.Geometry,x={};x[-c-1]={};let C=0;for(let t=-c;t<=c;++t){x[t]={};for(let i=-c;i<=c;++i){let c=t*n*l,f=(i-t/2)*l,m=Math.sqrt(c*c+f*f);if(m<=s){let n;if(m<=a){n=10;for(let t=25;t<=1500;t*=5)n+=o.noise((c+e.middleRadius)/t,(f+e.middleRadius)/t,r)*Math.min(t/2,150);if((n*=Math.min(a-m,d)/d)>0){let t=5;n+=o.noise((c+e.middleRadius)/t,(f+e.middleRadius)/t,r)*t/2}n<0&&(n=0)}else m<=e.middleRadius?n=0:(c*=u/m,f*=u/m,n=0);x[t][i]=C++,y.vertices.push(new THREE.Vector3(c,n,f))}}}x[c+1]={};let R=new THREE.Color(4210752);R.lerp(f,.75);const E=5*l,h=25*l,M=3*l,P=12*l;let S={};for(let n=-c;n<=c;++n){S[n]={};for(let t=-c;t<=c;++t){let i=y.vertices[x[n][t]];if(i)if(i.y>0){let l=(1.73205+o.noise((i.x+e.middleRadius)/E,(i.z+e.middleRadius)/E,r)+o.noise((i.x+e.middleRadius)/h,(i.z+e.middleRadius)/h,r))/3.4641,a=f.clone();S[n][t]=a.lerp(m,l)}else{if(Math.sqrt(i.x*i.x+i.z*i.z)>a)S[n][t]=g;else{let e=[];e[0]=y.vertices[x[n][t-1]],e[1]=y.vertices[x[n-1][t-1]],e[2]=y.vertices[x[n-1][t]],e[3]=y.vertices[x[n][t+1]],e[4]=y.vertices[x[n+1][t+1]],e[5]=y.vertices[x[n+1][t]];let l=0,a=0;for(let o=0;o<6;++o)e[o]&&(e[o].y>0?++l:++a);if(0===l){let e=(1.73205+o.noise((i.x+u)/M,(i.z+u)/M,r)+o.noise((i.x+u)/P,(i.z+u)/P,r))/3.4641,l=v.clone();S[n][t]=l.lerp(p,e)}else if(0===a)S[n][t]=R;else{let e=new THREE.Color(7430491);e.lerp(f,l/(l+a)),S[n][t]=e}}}}}for(let e=-c;e<=c;++e)for(let o=-c;o<=c;++o){let r=x[e][o];if(y.vertices[r]){let n=x[e][o-1],t=x[e-1][o-1],i=x[e-1][o];if(void 0!==n&&void 0!==t){let i=new THREE.Face3(r,n,t);i.vertexColors[0]=S[e][o],i.vertexColors[1]=S[e][o-1],i.vertexColors[2]=S[e-1][o-1],y.faces.push(i)}if(void 0!==t&&void 0!==i){let n=new THREE.Face3(r,t,i);n.vertexColors[0]=S[e][o],n.vertexColors[1]=S[e-1][o-1],n.vertexColors[2]=S[e-1][o],y.faces.push(n)}}}y.computeBoundingBox(),y.mergeVertices(),y.computeFaceNormals(),y.computeVertexNormals(),this.geometry=y}});var i=r(1),l=r.n(i),a=r(2),s=r.n(a);AFRAME.registerShader("vertex-color+noise",{schema:{sunPosition:{type:"vec3",default:{x:-1,y:1,z:-1}}},init:function(e){let o=new THREE.Vector3(e.sunPosition.x,e.sunPosition.y,e.sunPosition.z);this.material=new THREE.ShaderMaterial({uniforms:{sunNormal:{value:o.normalize()}},vertexShader:l.a,fragmentShader:s.a})},update:function(e){let o=new THREE.Vector3(e.sunPosition.x,e.sunPosition.y,e.sunPosition.z);this.material.uniforms.sunNormal.value=o.normalize()}}),AFRAME.registerPrimitive("a-atoll-terrain",{defaultComponents:{geometry:{primitive:"atoll-terrain",middleRadius:100,unitSize:1,log:!1},material:{shader:"vertex-color+noise",vertexColors:"vertex"}},mappings:{"middle-radius":"geometry.middleRadius","unit-size":"geometry.unitSize",far:"geometry.far",log:"geometry.log",shader:"material.shader","land-yin-color":"geometry.landYinColor","land-yang-color":"geometry.landYangColor","sea-yin-color":"geometry.seaYinColor","sea-yang-color":"geometry.seaYangColor","sun-position":"material.sunPosition",src:"material.src","flat-shading":"material.flatShading"}})}]);
//# sourceMappingURL=aframe-atoll-terrain.js.map