{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AFRAME","registerGeometry","schema","middleRadius","type","default","min","unitSize","max","far","log","init","data","SQRT3HALF","Math","sqrt","SIZE","round","UNIT_SIZE","INNER_RADIUS","OUTER_RADIUS","FAR","SCAN_SIZE","ceil","console","geometry","THREE","Geometry","vertexLookup","vertexInd","j","x","z","y","sin","abs","sign","vertices","push","Vector3","vertexA","vertexB","vertexC","vertexD","faces","Face3","computeBoundingBox","mergeVertices","computeFaceNormals","computeVertexNormals","this","registerPrimitive","defaultComponents","primitive","size","material","shader","side","mappings","middle-radius","unit-size","color","metalness","roughness","src","flat-shading"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// aframe-terrain-plain - An A-Frame WebVR primitive with high-resolution terrain surrounded by a low-res plain\n// Copyright Â© 2019 P. Douglas Reeder under the MIT License\n\n\nAFRAME.registerGeometry('terrain-plain', {\n    schema: {\n        middleRadius: {type: 'number', default: 100, min: 10},\n        unitSize: {type: 'number', default: 1, min: 0.1, max: 1000},\n        far: {type: 'number', default: 4000},\n        log: {type: 'boolean', default: false}\n    },\n    init: function (data) {\n        const SQRT3HALF = Math.sqrt(3) / 2;\n\n        const SIZE = Math.round(data.middleRadius / data.unitSize);\n        const UNIT_SIZE = data.middleRadius / SIZE;\n\n        const INNER_RADIUS = (SIZE-1) * UNIT_SIZE + 0.0001;\n        const OUTER_RADIUS = (SIZE+1) * UNIT_SIZE + 0.0001;\n        const FAR = data.far > OUTER_RADIUS ? data.far : OUTER_RADIUS;\n        const SCAN_SIZE = Math.ceil(SIZE * 1.16);   // empirically determined\n        if (data.log) {\n            console.log(\"terrain-plain\", \"SIZE=\"+SIZE, \"SCAN_SIZE=\"+SCAN_SIZE, \"UNIT_SIZE=\"+UNIT_SIZE,\n                \"middleRadius=\"+data.middleRadius, \"FAR=\"+FAR);\n        }\n\n        let geometry = new THREE.Geometry();\n\n        let vertexLookup = {};\n        vertexLookup[-SCAN_SIZE-1] = {};\n        let vertexInd = 0;\n        for (let i= -SCAN_SIZE; i<=SCAN_SIZE; ++i) {\n            vertexLookup[i] = {};\n            for (let j= -SCAN_SIZE; j<=SCAN_SIZE; ++j) {\n                let x = i * SQRT3HALF * UNIT_SIZE;\n                let z = (j - i/2) * UNIT_SIZE;\n                let r = Math.sqrt(x*x + z*z);\n                if (r <= OUTER_RADIUS) {\n                    let y;\n                    if (r <= INNER_RADIUS) {\n                        y = 2 * Math.sin(x / 3) * Math.sin(z / 4);\n\n                        if (Math.abs(y) > INNER_RADIUS - r) {\n                            y = Math.sign(y) * (INNER_RADIUS - r);\n                        }\n                    } else if (r <= data.middleRadius) {\n                        y = 0;\n                    } else {\n                        x *= FAR / r;\n                        z *= FAR / r;\n                        y = 0;\n                    }\n                    // if (data.log) {console.log(\"i=\" + i, \"j=\" + j, \"x=\" + x, \"z=\" + z, \"y=\" + y)}\n\n                    vertexLookup[i][j] = vertexInd++;\n                    geometry.vertices.push(new THREE.Vector3(x, y, z));\n\n                    let vertexA = vertexInd - 1;\n                    let vertexB = vertexLookup[i][j-1];\n                    let vertexC = vertexLookup[i-1][j-1];\n                    let vertexD = vertexLookup[i-1][j];\n                    if (typeof vertexB !== 'undefined' && typeof vertexC !== 'undefined') {\n                        geometry.faces.push(new THREE.Face3(vertexA, vertexB, vertexC));\n                    }\n                    if (typeof vertexC !== 'undefined' && typeof vertexD !== 'undefined') {\n                        geometry.faces.push(new THREE.Face3(vertexA, vertexC, vertexD));\n                    }\n                }\n            }\n        }\n        geometry.computeBoundingBox();\n        geometry.mergeVertices();\n        geometry.computeFaceNormals();\n        geometry.computeVertexNormals();\n        this.geometry = geometry;\n    }\n});\n\n\nAFRAME.registerPrimitive('a-terrain-plain', {\n    defaultComponents: {\n        geometry: {\n            primitive: 'terrain-plain',\n            unitSize: 1,\n            size: 1,\n            log: false\n        },\n        material: {\n            shader: 'standard',\n            side: 'front'\n        }\n    },\n\n    mappings: {\n        'middle-radius': 'geometry.middleRadius',\n        'unit-size': 'geometry.unitSize',\n        'far': 'geometry.far',\n        'log': 'geometry.log',\n        'color': 'material.color',\n        'metalness': 'material.metalness',\n        'roughness': 'material.roughness',\n        'src': 'material.src',\n        'flat-shading': 'material.flatShading'\n    }\n});\n"],"sourceRoot":""}